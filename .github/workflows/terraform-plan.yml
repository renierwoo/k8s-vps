name: Execute Terraform Plan

on:
  push:
    branches:
      - main
    paths:
      - "terraform/**"
  pull_request:
    branches:
      - main
    paths:
      - "terraform/**"

jobs:
  tflint:
    if: github.event_name == 'pull_request'

    defaults:
      run:
        working-directory: terraform

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/cache@v4
        name: Cache plugin dir
        with:
          path: ~/.tflint.d/plugins
          key: ubuntu-latest-tflint-${{ hashFiles('.tflint.hcl') }}

      - uses: terraform-linters/setup-tflint@v4.1.1
        name: Setup TFLint
        with:
          tflint_version: v0.57.0

      - name: Show version
        run: tflint --version

      - name: Init TFLint
        run: tflint --init
        env:
          # https://github.com/terraform-linters/tflint/blob/master/docs/user-guide/plugins.md#avoiding-rate-limiting
          GITHUB_TOKEN: ${{ github.token }}

      # - name: Run TFLint
      #   run: tflint -f compact

  trivy:
    if: github.event_name == 'pull_request'

    needs: tflint

    defaults:
      run:
        working-directory: terraform

    runs-on: ubuntu-latest

    env:
      TF_VAR_connection_host: ${{ secrets.TF_VAR_CONNECTION_HOST }}
      TF_VAR_connection_port: ${{ secrets.TF_VAR_CONNECTION_PORT }}
      TF_VAR_connection_user: ${{ secrets.TF_VAR_CONNECTION_USER }}
      TF_VAR_connection_private_key: ${{ secrets.TF_VAR_CONNECTION_PRIVATE_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Manual Trivy Setup
        uses: aquasecurity/setup-trivy@v0.2.3
        with:
          cache: true
          version: v0.62.1

      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@0.30.0
        with:
          scan-type: 'config'
          # hide-progress: true
          format: 'sarif'
          output: 'trivy-results.sarif'
          exit-code: '1'
          severity: 'UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL'
          scan-ref: './'
          skip-setup-trivy: true

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

  terraform_plan:
    if: github.event_name == 'pull_request'

    needs: trivy

    defaults:
      run:
        working-directory: terraform

    runs-on: ubuntu-latest

    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      TF_VAR_connection_host: ${{ secrets.TF_VAR_CONNECTION_HOST }}
      TF_VAR_connection_port: ${{ secrets.TF_VAR_CONNECTION_PORT }}
      TF_VAR_connection_user: ${{ secrets.TF_VAR_CONNECTION_USER }}
      TF_VAR_connection_private_key: ${{ secrets.TF_VAR_CONNECTION_PRIVATE_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Fmt
        id: fmt
        run: terraform fmt -check -diff -recursive

      - name: Terraform Init
        id: init
        run: terraform init -input=false

      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: terraform plan -input=false
